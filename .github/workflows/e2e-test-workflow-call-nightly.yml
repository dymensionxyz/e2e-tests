on:
  workflow_call:
    inputs:
      dymension_ci:
        description: "CI run on Dymension Repo"
        required: false
        type: string
        default: "latest"
      rollapp_evm_ci:
        description: "CI run on Rollapp-EVM Repo"
        required: false
        type: string
        default: "latest"
      rollapp_wasm_ci:
        description: "CI run on Rollapp-Wasm Repo"
        required: false
        type: string
        default: "latest"
      relayer_ci:
        description: "CI run on Relayer Repo"
        required: false
        type: string
        default: "main-dym"
      test:
        description: 'test name to run as standalone'
        required: false
        type: string
        default: ''
      test-exclusions:
        description: 'Comma separated list of tests to skip'
        required: false
        type: string
        default: '' # empty string means don't skip any test.

jobs:
  build-evm-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: dymensionxyz/e2e-tests
          ref: main
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"
      - id: set-matrix
        run: |
          output=$(go run build_tests_matrix/main.go)
          echo "matrix=$output" >> $GITHUB_OUTPUT
        env:
          TEST_EXCLUSIONS: '${{ inputs.test-exclusions }}'
          TEST_NAME: '${{ inputs.test }}'
          ROLLAPP_TYPE: "EVM"
  build-wasm-matrix:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - uses: actions/checkout@v4
        with:
          repository: dymensionxyz/e2e-tests
          ref: main
      - uses: actions/setup-go@v5
        with:
          go-version: "1.23.4"
      - id: set-matrix
        run: |
          output=$(go run build_tests_matrix/main.go)
          echo "matrix=$output" >> $GITHUB_OUTPUT
        env:
          TEST_EXCLUSIONS: '${{ inputs.test-exclusions }}'
          TEST_NAME: '${{ inputs.test }}'
          ROLLAPP_TYPE: "Wasm"
  # e2e-tests-by runs the actual go test command to trigger the test.
  rollapp-evm:
    needs:
      - build-evm-matrix
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.build-evm-matrix.outputs.matrix) }}
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          repository: dymensionxyz/e2e-tests
          ref: main
      - name: Set up Go 1.23
        uses: actions/setup-go@v4
        with:
          go-version: "1.23.4"

      - name: Download Tarball Artifact
        uses: actions/download-artifact@v4
        with:
          name: e2e
          path: /tmp

      - name: Load Docker Image
        run: |
          docker image load -i /tmp/e2e.tar 
          docker image ls -a

      - name: Rollapp-EVM E2E Tests
        run: 
          set +e
          sudo -E make e2e-test test=${{ matrix.test }}
          TEST_EXIT_CODE=$?
          set -e
          if [ "$TEST_EXIT_CODE" -ne 0 ]; then
            echo "${{ matrix.test }}" >> failed-tests.log
            exit 1
          fi
        env:
          DYMENSION_CI: ${{ inputs.dymension_ci }}
          ROLLAPP_EVM_CI: ${{ inputs.rollapp_evm_ci }}
          ROLLAPP_WASM_CI: ${{ inputs.rollapp_wasm_ci }}
          RELAYER_CI: ${{ inputs.relayer_ci }}
      
      - name: Upload Failed Tests
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: failed-tests-${{ matrix.test }}
          path: failed-tests.log
          if-no-files-found: ignore

  # e2e-tests-by runs the actual go test command to trigger the test.
  rollapp-wasm:
      needs:
        - build-wasm-matrix
      strategy:
        fail-fast: false
        matrix: ${{ fromJSON(needs.build-wasm-matrix.outputs.matrix) }}
      runs-on: ubuntu-latest
      steps:
        - uses: actions/checkout@v4
          with:
            repository: dymensionxyz/e2e-tests
            ref: main
        - name: Set up Go 1.23
          uses: actions/setup-go@v4
          with:
            go-version: "1.23.4"
  
        - name: Download Tarball Artifact
          uses: actions/download-artifact@v4
          with:
            name: e2e
            path: /tmp
  
        - name: Load Docker Image
          run: |
            docker image load -i /tmp/e2e.tar 
            docker image ls -a
  
        - name: Rollapp-Wasm E2E Tests
          run: 
            set +e
            sudo -E make e2e-test test=${{ matrix.test }}
            TEST_EXIT_CODE=$?
            set -e
            if [ "$TEST_EXIT_CODE" -ne 0 ]; then
              echo "${{ matrix.test }}" >> failed-tests.log
              exit 1
            fi

          env:
            DYMENSION_CI: ${{ inputs.dymension_ci }}
            ROLLAPP_EVM_CI: ${{ inputs.rollapp_evm_ci }}
            ROLLAPP_WASM_CI: ${{ inputs.rollapp_wasm_ci }}
            RELAYER_CI: ${{ inputs.relayer_ci }}

             
        - name: Upload Failed Tests
          if: failure()
          uses: actions/upload-artifact@v4
          with:
            name: failed-tests-${{ matrix.test }}
            path: failed-tests.log
            if-no-files-found: ignore

  notify-slack:
    runs-on: ubuntu-latest
    needs: 
      - rollapp-evm
      - rollapp-wasm
    steps:
      - name: Download All Failed Test Logs
        uses: actions/download-artifact@v4
        with:
          pattern: my-artifact-*

      - name: Combine Failed Test Logs
        run: |
          set +e
          touch combined-failed-tests.log
          for file in failed-tests-*.log; do
            cat "$file" >> combined-failed-tests.log
          done
          set -e
          echo "RUN_URL=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" >> $GITHUB_ENV

      - name: Aggregate Results
        id: aggregate
        run: |
          if [ -s combined-failed-tests.log ]; then
            FAILED_TESTS=$(awk '{print NR ". " $0}' combined-failed-tests.log | paste -sd '\n' -)
            echo "FAILED_TESTS=$FAILED_TESTS" >> $GITHUB_ENV
          else
            echo "FAILED_TESTS=" >> $GITHUB_ENV
          fi

      - name: Notify Slack
        uses: slackapi/slack-github-action@v1.24.0
        with:
          method: chat.postMessage
          token: ${{ secrets.SLACK_E2E_TEST_TOKEN }}
          payload: |     
            channel: C088KMGDNHW,
            text: "E2E Tests Report:\n- *Status*: ${{ env.FAILED_TESTS && 'Tests failed' || 'All tests passed!' }}\n${{ env.FAILED_TESTS && '- *Failed Tests:*\n' || '' }}${{ env.FAILED_TESTS || '' }}\n- *Run URL*: ${{ github.run_html_url }}"
              

            